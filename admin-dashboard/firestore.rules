rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions for authentication and authorization
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    function hasRole(role) {
      return isAuthenticated() && getUserData().role == role;
    }
    
    function hasAnyRole(roles) {
      return isAuthenticated() && getUserData().role in roles;
    }
    
    function belongsToDiocese(diocese) {
      return isAuthenticated() && getUserData().diocese == diocese;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isMuseumResearcher() {
      return hasRole('museum_researcher');
    }
    
    function isChanceryOffice() {
      return hasRole('chancery_office');
    }
    
    function isParishSecretary() {
      return hasRole('parish_secretary');
    }
    
    // Users collection - User profiles and authentication data
    match /users/{userId} {
      // Users can read and update their own profile (using direct UID comparison to avoid circular dependency)
      allow read, write: if isAuthenticated() && request.auth.uid == userId;

      // Allow users to create their own profile if it doesn't exist
      allow create: if isAuthenticated() && request.auth.uid == userId;

      // Chancery office can read all users in their diocese (use try-catch pattern for getUserData)
      allow read: if isAuthenticated() &&
                     exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'chancery_office' &&
                     (resource.data.diocese == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.diocese);

      // Museum researchers can read user profiles (for attribution)
      allow read: if isAuthenticated() &&
                     exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                     get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'museum_researcher';

      // Chancery office can create parish secretary accounts only in their diocese
      allow create: if isAuthenticated() &&
                       exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'chancery_office' &&
                       request.resource.data.role == 'parish_secretary' &&
                       request.resource.data.diocese == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.diocese;

      // Chancery office can update and delete user accounts in their diocese
      allow update, delete: if isAuthenticated() &&
                               exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                               get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'chancery_office' &&
                               resource.data.diocese == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.diocese;
    }
    
    // Churches collection - Main church data
    match /churches/{churchId} {
      // Everyone can read church data (public information)
      allow read: if true;
      
  // Parish secretaries can create exactly one church in their diocese,
  // with doc ID equal to their parish ID, and only if it does not exist yet
  allow create: if isParishSecretary() &&
           request.resource.data.diocese == getUserData().diocese &&
           getUserData().parish == churchId &&
           // ensure not overwriting existing
           !exists(/databases/$(database)/documents/churches/$(churchId));

  // Parish secretaries can update their own parish church only (cannot change diocese)
  allow update: if isParishSecretary() &&
           churchId == getUserData().parish &&
           resource.data.diocese == getUserData().diocese &&
           request.resource.data.diocese == resource.data.diocese;

  // Chancery office can create churches in their diocese
  allow create: if isChanceryOffice() && request.resource.data.diocese == getUserData().diocese;

  // Chancery office can update churches in their diocese (cannot change diocese)
  allow update: if isChanceryOffice() &&
           resource.data.diocese == getUserData().diocese &&
           request.resource.data.diocese == resource.data.diocese;

  // Chancery office can delete churches in their diocese
  allow delete: if isChanceryOffice() && resource.data.diocese == getUserData().diocese;
      
      // Museum researchers can update heritage-related fields across dioceses
      allow update: if isMuseumResearcher() &&
                           request.resource.data.diff(resource.data).affectedKeys()
                             .hasOnly(['culturalSignificance', 'heritageNotes', 'heritageValidation',
                                       'heritageDeclaration', 'lastHeritageUpdate', 'heritageResearcher',
                                       'status', 'updatedAt', 'lastReviewedBy', 'lastReviewNote', 'lastStatusChange']);
    }
    
    // Church heritage validation subcollection
    match /churches/{churchId}/heritage/{heritageId} {
      // Museum researchers can read and write heritage validations
      allow read, write: if isMuseumResearcher();
      
      // Chancery office can read heritage validations in their diocese
      allow read: if isChanceryOffice() && 
                     get(/databases/$(database)/documents/churches/$(churchId)).data.diocese == getUserData().diocese;
      
      // Parish secretaries can read heritage validations for their diocese churches
      allow read: if isParishSecretary() && 
                     get(/databases/$(database)/documents/churches/$(churchId)).data.diocese == getUserData().diocese;
    }
    
    // Church images subcollection
    match /churches/{churchId}/images/{imageId} {
      // Anyone can read images (public)
      allow read: if true;
      
      // Parish secretaries and chancery can manage images for their diocese
      allow create, update, delete: if (isParishSecretary() || isChanceryOffice()) && 
                                       get(/databases/$(database)/documents/churches/$(churchId)).data.diocese == getUserData().diocese;
      
      // Museum researchers can add heritage documentation images
      allow create, update: if isMuseumResearcher();
    }
    
    // Parish information collection
    match /parishes/{parishId} {
      // Everyone can read parish data
      allow read: if true;
      
      // Chancery office can manage parishes in their diocese
      allow create, update, delete: if isChanceryOffice() && 
                                       (request.resource.data.diocese == getUserData().diocese ||
                                        resource.data.diocese == getUserData().diocese);
      
      // Parish secretaries can update their own parish
      allow update: if isParishSecretary() && 
                       resource.data.diocese == getUserData().diocese &&
                       getUserData().parish == parishId;
    }
    
    // Diocese information collection
    match /dioceses/{dioceseId} {
      // Everyone can read diocese information
      allow read: if true;
      
      // Only chancery office can update their own diocese info
      allow update: if isChanceryOffice() && 
                       dioceseId == getUserData().diocese;
    }
    
    // Reports collection
    match /reports/{reportId} {
      // Chancery office can create and read reports for their diocese
      allow read, create: if isChanceryOffice() && 
                             (request.resource.data.diocese == getUserData().diocese ||
                              resource.data.diocese == getUserData().diocese);
      
      // Museum researchers can read heritage reports across dioceses
      allow read: if isMuseumResearcher() && 
                     resource.data.type == 'heritage';
    }
    
    // Feedback and reviews collection
    match /feedback/{feedbackId} {
      // Authenticated users can create feedback
      allow create: if isAuthenticated() &&
                       (request.resource.data.userId == request.auth.uid ||
                        request.resource.data.pub_user_id == request.auth.uid);

      // Anyone can read published feedback (for public reviews and diocese analytics)
      allow read: if resource.data.status == 'published';

      // Users can read their own feedback (regardless of status)
      allow read: if isAuthenticated() &&
                     (resource.data.userId == request.auth.uid ||
                      resource.data.pub_user_id == request.auth.uid);

      // Chancery office can read ALL feedback in their diocese (for reports and moderation)
      allow read: if isChanceryOffice();

      // Parish secretaries can read feedback for churches in their diocese
      allow read: if isParishSecretary() &&
                     get(/databases/$(database)/documents/churches/$(resource.data.church_id)).data.diocese == getUserData().diocese;

      // Chancery office and parish secretaries can moderate feedback for churches in their diocese
      allow update: if (isChanceryOffice() || isParishSecretary()) &&
                       get(/databases/$(database)/documents/churches/$(resource.data.church_id)).data.diocese == getUserData().diocese;
    }
    
    // Church status audit logs
    match /church_status_audit/{auditId} {
      // Authenticated users can create audit logs when changing church status
      allow create: if isAuthenticated();

      // Chancery office and museum researchers can read audit logs for churches in their scope
      allow read: if (isChanceryOffice() && resource.data.diocese == getUserData().diocese) ||
                     isMuseumResearcher();
    }

    // User activity logs (audit trail)
    match /logs/{logId} {
      // System can write logs (server-side)
      allow create: if isAuthenticated();

      // Chancery office can read logs for their diocese
      allow read: if isChanceryOffice() &&
                     resource.data.diocese == getUserData().diocese;
    }
    
    // Configuration and system settings
    match /config/{configId} {
      // Everyone can read public configuration
      allow read: if resource.data.public == true;
      
      // Only chancery office can read/write diocese-specific config
      allow read, write: if isChanceryOffice() && 
                            resource.data.diocese == getUserData().diocese;
    }

    // Invites collection - Chancery invites parish secretaries
    match /invites/{inviteId} {
      // Allow read of invite details so invited user can load registration form
      allow read: if true;

      // Chancery office can create invites for their own diocese
      allow create: if isChanceryOffice() && request.resource.data.diocese == getUserData().diocese;

      // Allow invited user to mark invite as accepted after registration
      allow update: if isAuthenticated() &&
                      resource.data.status == 'pending' &&
                      request.resource.data.status == 'accepted' &&
                      request.resource.data.acceptedBy.uid == request.auth.uid;
    }

    // Announcements collection - Diocese and parish announcements
    match /announcements/{announcementId} {
      // Everyone can read announcements (public information)
      allow read: if true;

      // Chancery office can create and manage announcements for their diocese
      allow create: if isChanceryOffice() &&
                       request.resource.data.diocese == getUserData().diocese;

      // Chancery office can update announcements in their diocese
      allow update: if isChanceryOffice() &&
                       resource.data.diocese == getUserData().diocese &&
                       request.resource.data.diocese == resource.data.diocese;

      // Chancery office can delete announcements in their diocese
      allow delete: if isChanceryOffice() &&
                       resource.data.diocese == getUserData().diocese;

      // Parish secretaries can create parish-scoped announcements in their diocese
      allow create: if isParishSecretary() &&
                       request.resource.data.diocese == getUserData().diocese &&
                       request.resource.data.scope == 'parish' &&
                       request.resource.data.parishId == getUserData().parish;

      // Parish secretaries can update their own parish announcements
      allow update: if isParishSecretary() &&
                       resource.data.diocese == getUserData().diocese &&
                       resource.data.scope == 'parish' &&
                       resource.data.parishId == getUserData().parish &&
                       request.resource.data.diocese == resource.data.diocese &&
                       request.resource.data.scope == resource.data.scope &&
                       request.resource.data.parishId == resource.data.parishId;
    }

    // Church Visited collection - Physical visit tracking
    match /church_visited/{visitId} {
      // Anyone can read visit data (for public analytics and diocese reports)
      allow read: if true;

      // Authenticated users can create visit logs for themselves
      allow create: if isAuthenticated() &&
                       request.resource.data.pub_user_id == request.auth.uid &&
                       request.resource.data.visit_status == 'validated';

      // No updates or deletes allowed (immutable visit log)
      allow update, delete: if false;
    }

    // Notifications collection - System notifications for users
    match /notifications/{notificationId} {
      // Users can read notifications that are relevant to them
      // Check if user is in the userIds array OR if their role is in the roles array
      allow read: if isAuthenticated() && (
        // Direct user ID match
        (resource.data.recipients.userIds != null && 
         request.auth.uid in resource.data.recipients.userIds) ||
        // Role-based match (considering diocese if specified)
        (resource.data.recipients.roles != null && 
         getUserData().role in resource.data.recipients.roles &&
         (resource.data.recipients.dioceses == null ||
          getUserData().diocese in resource.data.recipients.dioceses))
      );

      // System can create notifications (chancery office, museum researcher)
      allow create: if isAuthenticated() && 
                       (isChanceryOffice() || isMuseumResearcher());

      // Users can update notifications to mark them as read
      allow update: if isAuthenticated() && (
        // Check if user is allowed to read this notification
        (resource.data.recipients.userIds != null && 
         request.auth.uid in resource.data.recipients.userIds) ||
        (resource.data.recipients.roles != null && 
         getUserData().role in resource.data.recipients.roles &&
         (resource.data.recipients.dioceses == null ||
          getUserData().diocese in resource.data.recipients.dioceses))
      ) && (
        // Only allow updating readBy array
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['readBy', 'isRead'])
      );

      // Only chancery office can delete notifications
      allow delete: if isChanceryOffice();
    }

    // Default deny rule for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
